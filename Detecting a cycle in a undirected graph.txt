#include<bits/stdc++.h>
#include <iostream>

using namespace std;

bool isCyclic_util(vector<int> adj[],vector<int>visited,int curr)
{
    if(visited[curr]==2)
    {
        return true;
    }
    bool Flag=false;
    visited[curr]=1;
    for(int j=0;j<adj[curr].size();j++)
    {
        if(visited[adj[curr][j]]==1)
        {
           visited[adj[curr][j]]=2;
        }
        else
        {
        Flag=isCyclic_util(adj,visited,adj[curr][j]);
        if(Flag==true)
        {
            cout<<adj[curr][j]<<" ";
            return true;
        }
        }
        
    }
    return false;
}

bool isCyclic(int v,vector<int> adj[])
{
    vector<int>visited(v,0);
    bool Flag=false;
    for(int i=0;i<v;i++)
    {
        visited[i]=1;
        for(int j=0;j<adj[i].size();j++)
        {
            Flag=isCyclic_util(adj,visited,adj[i][j]);
            if(Flag==true)
            {
                cout<<adj[i][j]<<" ";
                return true;   
            }
        }
        visited[i]=0;
    }
    return false;
}

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int v,e;
        cin>>v>>e;
        vector<int> adj[v];
        for(int i=0;i<e;i++)
        {
            int u,v;
            cin>>u>>v;
            adj[u].push_back(v);
            adj[v].push_back(u);
        }
        
       if(isCyclic(v,adj))
       {
           cout<<"  "<<"cycle formed"<<endl;
       }
       else
       {
           cout<<"  "<<"cycle not formed"<<endl;
       }
    }

    return 0;
}
